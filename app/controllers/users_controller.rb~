class UsersController < ApplicationController
  before_action :set_user, only: [:show, :edit, :update, :destroy]
  skip_before_filter :authorize, only: [:new, :create]
  # GET /users
  # GET /users.json
  def index
      @users = User.order(:user_name)
      respond_to do |format|
          format.html
          format.json {render json: @users }
      end
  end

  # GET /users/1
  # GET /users/1.json
  def show
  end



  # GET /users/new
  def new
    @user = User.new
  end

  # GET /users/1/edit
  def edit
  end

  # POST /users
  # POST /users.json
  def create
      @user = User.create(user_params)
      @portfolio = Portfolio.new
      @portfolio[:user_id] = @user.id
      @portfolio.save
    respond_to do |format|
      if @user  
        #NewuserMailer.sample_email(@user).deliver_now
        format.html { redirect_to users_url, notice: "User #{@user.user_name} was successfully created." }
        format.json { render @user, status: :created, location: @user }
      else
        format.html { render action: "new" }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /users/1
  # PATCH/PUT /users/1.json
  def update
      @user = User.find(params[:id])

    respond_to do |format|
      if @user
        @user.settings(:frequency).time = params[:time]
        @user.save!
             Rails.logger.debug "android #{params.inspect}"
             Rails.logger.debug "iphone #{@user.settings(:frequency).time } +++++ #{params[:time]}"
        Rails.logger.debug "time123 = #{@user.settings(:frequency).time}"
        format.html { redirect_to users_url, notice: "User #{@user.user_name} was successfully updated." }
      else
        format.html { render action: "edit" }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /users/1
  # DELETE /users/1.json
  def destroy
    @user.destroy
    respond_to do |format|
      format.html { redirect_to users_url, notice: 'User was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_user
      @user = User.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def user_params
      params.require(:user).permit(:user_name, :password, :email, :admin)
    end
end
